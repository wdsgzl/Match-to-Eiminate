// Generated by view binder compiler. Do not edit!
package com.example.app.databinding;

import android.support.annotation.NonNull;
import android.support.annotation.Nullable;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.viewbinding.ViewBinding;
import android.widget.Button;
import android.widget.RelativeLayout;
import android.widget.TextView;
import com.example.app.Game.GameView;
import com.example.app.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class Tab1Binding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final Button btnRank;

  @NonNull
  public final Button btneasy;

  @NonNull
  public final Button btninsane;

  @NonNull
  public final Button btnmiddle;

  @NonNull
  public final Button btnnormal;

  @NonNull
  public final GameView gameView;

  @NonNull
  public final Button startButton;

  @NonNull
  public final TextView timeText;

  private Tab1Binding(@NonNull RelativeLayout rootView, @NonNull Button btnRank,
      @NonNull Button btneasy, @NonNull Button btninsane, @NonNull Button btnmiddle,
      @NonNull Button btnnormal, @NonNull GameView gameView, @NonNull Button startButton,
      @NonNull TextView timeText) {
    this.rootView = rootView;
    this.btnRank = btnRank;
    this.btneasy = btneasy;
    this.btninsane = btninsane;
    this.btnmiddle = btnmiddle;
    this.btnnormal = btnnormal;
    this.gameView = gameView;
    this.startButton = startButton;
    this.timeText = timeText;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static Tab1Binding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static Tab1Binding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup parent,
      boolean attachToParent) {
    View root = inflater.inflate(R.layout.tab1, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static Tab1Binding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    String missingId;
    missingId: {
      Button btnRank = rootView.findViewById(R.id.btn_rank);
      if (btnRank == null) {
        missingId = "btnRank";
        break missingId;
      }
      Button btneasy = rootView.findViewById(R.id.btneasy);
      if (btneasy == null) {
        missingId = "btneasy";
        break missingId;
      }
      Button btninsane = rootView.findViewById(R.id.btninsane);
      if (btninsane == null) {
        missingId = "btninsane";
        break missingId;
      }
      Button btnmiddle = rootView.findViewById(R.id.btnmiddle);
      if (btnmiddle == null) {
        missingId = "btnmiddle";
        break missingId;
      }
      Button btnnormal = rootView.findViewById(R.id.btnnormal);
      if (btnnormal == null) {
        missingId = "btnnormal";
        break missingId;
      }
      GameView gameView = rootView.findViewById(R.id.gameView);
      if (gameView == null) {
        missingId = "gameView";
        break missingId;
      }
      Button startButton = rootView.findViewById(R.id.startButton);
      if (startButton == null) {
        missingId = "startButton";
        break missingId;
      }
      TextView timeText = rootView.findViewById(R.id.timeText);
      if (timeText == null) {
        missingId = "timeText";
        break missingId;
      }
      return new Tab1Binding((RelativeLayout) rootView, btnRank, btneasy, btninsane, btnmiddle,
          btnnormal, gameView, startButton, timeText);
    }
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
